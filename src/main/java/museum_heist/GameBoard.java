package museum_heist;





public class GameBoard {
	
	
	
	
	private int[][]  gameBoardLevel01  =  
    		
   	 { 

   	   {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},
   	   {1,  0,  5,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  3,  0,  0,  0,  0,  1,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  1},
   	   {1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  3,  0,  0,  1},
   	   {1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  3,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  1,  1,  1,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  1,  0,  0,  1,  0,  0,  4},
   	   {1,  5,  5,  1,  1,  1,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  1,  0,  3,  1},
   	   {1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  3,  1,  0,  0,  0,  0,  1,  5,  5,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  5,  5,  1,  0,  0,  0,  0,  1,  0,  0,  1},
   	   {1,  3,  0,  1,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  3,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  1,  0,  1,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
   	   {1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  1,  1,  1,  0,  0,  1},
   	   {1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  1},
   	   {1,  0,  0,  0,  3,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  1},
   	   {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},
   	   
   	};
	
	// I nuläget nästan kopia av level01_bara för sakens skull
	private int[][]  gameBoardLevel02  =  
    		
	   	 { 

	   	   {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  1},
	   	   {1,  0,  0,  1,  1,  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  1,  1,  0,  0,  3,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  3,  0,  0,  1},
	   	   {1,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  3,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  1,  1,  1,  1,  1,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  1,  0,  0,  1,  0,  0,  1,  1,  1,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  1,  0,  0,  1,  0,  0,  4},
	   	   {1,  5,  5,  1,  1,  1,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  1,  0,  3,  1},
	   	   {1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  3,  1,  0,  0,  0,  0,  1,  5,  5,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  5,  5,  1,  0,  0,  0,  0,  1,  0,  0,  1},
	   	   {1,  3,  0,  1,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  3,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  1,  0,  1,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  1},
	   	   {1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  1,  1,  1,  0,  0,  1},
	   	   {1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  1},
	   	   {1,  0,  0,  0,  3,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  1},
	   	   {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},
	   	   
	   	};
	
	int[][]  gameboardForInitialTesting  =  
		{ 	 {1,   2,  3,  4,   5},
			 {6,   7,  8,  9,   10},
			 {11,  12, 13, 14,  15},
			 {16,  17, 18, 19,  20},
			 {21,  22, 23, 24,  25},
			 {26,  27, 28, 29,  30},
			 {31,  32, 33, 34,  35},
			 {36,  37, 38, 39,  40}	};	
	
	
	public int[][] getGameBoardLevel01() {
		return gameBoardLevel01;
	}


	public int[][] getGameBoardLevel02() {
		return gameBoardLevel02;
	}


	public int[][] getGameboardForInitialTesting() {
		return gameboardForInitialTesting;
	}


	//returnerar värdet som återfinns på den inskickade positionen
	public int getGameBoardValue(Position pos, int level ) {
		
		int row = (int) pos.getX();
		int column = (int)pos.getY();
		int value = 0;
		if (level == 1) {return value = gameBoardLevel01[row][column];}
		if (level == 2) {return  value = gameBoardLevel02[row][column];}
		if (level == 0) {return value = gameboardForInitialTesting[row][column];}
		else return value;
		
	} 
	
	// Ritar upp Arrayen
	 public void drawMap(GameBoard gameBoard, int level )
	    {
			
	        int[][] map = gameBoard.getGameBoard(level);
	        
	        
	        
	        for ( int q = 0; q < map.length; q++ )
	        {
	            for ( int x = 0; x < map[0].length; x++ )
	            {
	            	 
	                    System.out.print(map[q][x]);
	                    System.out.print("|");
	                
	            }
	            System.out.print("\n");
	       }
	    
	        
	    }
	 
	 // Tar in en level och returnerar en 2D Array
	 public int[][] getGameBoard(int level)
	 {
		 	if (level == 1) {return this.gameBoardLevel01;}
			if (level == 2) {return this.gameBoardLevel02;}
			if (level == 0) {return this.gameboardForInitialTesting;}
			return this.gameBoardLevel01;
		 
	 }
}